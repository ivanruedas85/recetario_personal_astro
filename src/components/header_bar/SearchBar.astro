<div class="search-bar">
    <form id="search-form" action="/search" method="get">
        <div class="search-input-wrapper">
            <input
                type="text"
                name="q"
                id="search-input"
                placeholder="Buscar recetas..."
                autocomplete="off"
            />
            <button type="submit" class="search-button" aria-label="Buscar">
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="18"
                    height="18"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                >
                    <circle cx="11" cy="11" r="8"></circle>
                    <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                </svg>
            </button>
        </div>
        <div id="search-suggestions" class="search-suggestions"></div>
    </form>
</div>

<script>
    // Search suggestions functionality
    const searchInput = document.getElementById("search-input");
    const suggestionsContainer = document.getElementById("search-suggestions");

    // Mock search data - in a real app, this would come from your backend
    const searchData = [
        "Paella valenciana",
        "Tortilla espa√±ola",
        "Gazpacho andaluz",
        "Pasta carbonara",
        "Pollo al horno con patatas",
        "Arroz con leche",
        "Sopa de verduras",
        "Ensalada cesar",
    ];

    function showSuggestions(input) {
        const value = input.toLowerCase();

        // Clear previous suggestions
        if (suggestionsContainer) {
            suggestionsContainer.innerHTML = "";

            if (value.length < 2) {
                suggestionsContainer.style.display = "none";
                return;
            }

            // Filter suggestions based on input
            const matches = searchData.filter((item) =>
                item.toLowerCase().includes(value),
            );

            // Display suggestions
            if (matches.length > 0) {
                matches.forEach((match) => {
                    const suggestionItem = document.createElement("div");
                    suggestionItem.classList.add("suggestion-item");
                    suggestionItem.textContent = match;

                    suggestionItem.addEventListener("click", () => {
                        if (searchInput) {
                            searchInput.value = match;
                            suggestionsContainer.style.display = "none";

                            // Submit the form
                            const form = document.getElementById("search-form");
                            form?.submit();
                        }
                    });

                    suggestionsContainer.appendChild(suggestionItem);
                });

                suggestionsContainer.style.display = "block";
            } else {
                suggestionsContainer.style.display = "none";
            }
        }
    }

    // Event listeners
    searchInput?.addEventListener("input", () => {
        if (searchInput.value) {
            showSuggestions(searchInput.value);
        } else if (suggestionsContainer) {
            suggestionsContainer.style.display = "none";
        }
    });

    // Close suggestions when clicking outside
    document.addEventListener("click", (e) => {
        if (e.target !== searchInput && suggestionsContainer) {
            suggestionsContainer.style.display = "none";
        }
    });
</script>

<style>
    .search-bar {
        position: relative;
        width: 100%;
    }

    .search-input-wrapper {
        display: flex;
        position: relative;
    }

    #search-input {
        width: 100%;
        padding: var(--space-2) var(--space-3);
        border: 2px solid var(--color-neutral-300);
        border-radius: var(--border-radius-md);
        font-family: var(--font-body);
        font-size: 1rem;
        transition:
            border-color var(--transition-fast),
            box-shadow var(--transition-fast);
    }

    #search-input:focus {
        outline: none;
        border-color: var(--color-primary-400);
        box-shadow: 0 0 0 3px rgba(224, 122, 95, 0.2);
    }

    .search-button {
        position: absolute;
        right: 0;
        top: 0;
        height: 100%;
        padding: 0 var(--space-3);
        background: none;
        border: none;
        color: var(--color-neutral-600);
        cursor: pointer;
        transition: color var(--transition-fast);
    }

    .search-button:hover {
        color: var(--color-primary-500);
        background: none;
        transform: none;
    }

    .search-suggestions {
        position: absolute;
        top: 100%;
        left: 0;
        width: 100%;
        background-color: white;
        border: 1px solid var(--color-neutral-300);
        border-radius: var(--border-radius-md);
        box-shadow: var(--shadow-md);
        z-index: 10;
        max-height: 300px;
        overflow-y: auto;
        display: none;
        margin-top: var(--space-1);
    }

    .suggestion-item {
        padding: var(--space-2) var(--space-3);
        cursor: pointer;
        transition: background-color var(--transition-fast);
    }

    .suggestion-item:hover {
        background-color: var(--color-neutral-200);
    }
</style>
